Курс: Разработка web-приложений на JavaScript
Тема: 3D графика и WebGL

Задание
=======
1. Внимательно просмотрите код, созданный на уроке и исследуйте, как он работает. Для более полного понимания можете обратиться к документации библиотеки cannon-es.js: https://pmndrs.github.io/cannon-es/docs/modules.html

2. Сделайте рефакторинг этого кода - создайте классы Layer3d и Object3d и вынесите их в отдельный модуль.

3. Класс Layer3d должен содержать в себе:
    * сцену для визуализации 3D объектов (THREE.Scene);
    * камеру (THREE.PerspectiveCamera);
    * экземпляр OrbitControls;
    * мир физических объектов (CANNON.World)
    * список объектов, помещённых на слой.
    Методы класса:
    * animationLoop() для рендеринга;
    * add() и remove() для помещения объектов на слой (в список) и их удаления;
    Вызов конструктора может выглядеть следующим образом:
      const layer = new Layer3d(renderer);

4. Класс Object3d должен содержать в себе:
    * тип объекта ('sphere', 'box', 'plane');
    * размеры объекта, в соответствии с его типом;
    * геометрию объекта (THREE....Geomentry), в соответствии с его типом;
    * материал объекта (THREE.MeshBasicMaterial);
    * физическое тело объекта(CANNON.Body), в соответствии с его типом;
    * физический материал объекта (CANNON.Material).
    Методы класса:
    * setFriction(otherObject, value) - установить силу трения c другим объектом;
    * rotate(x, y, z) - повернуть объект на углы по x, y, z; 
    * move(x, y, z) - переместить объект в новые координаты;
    * force(x, y, z) - приложить к объекту вектор силы.
    Вызов конструктора может выглядеть следующим образом:
      const ball = new Object3d(layer, 'box', [10, 4, 2], color, mass);

5. Сождайте такую же сцену с таким же поведением объектов, как на занятии, но с использованием созданных вами классов Layer3d и Object3d.

